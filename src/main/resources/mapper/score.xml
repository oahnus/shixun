<?xml version = "1.0" encoding = "UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD com.example.Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace = "top.oahnus.mapper.ScoreMapper">
    <resultMap id="score_map" type="Score">
        <result column="score_id" property="id" javaType="String"/>
        <result column="teacher_score" property="teacherScore" javaType="Float"/>
        <result column="company_score" property="companyScore" javaType="Float"/>
        <result column="course_selection.id" property="courseSelection.id" javaType="String"/>
        <result column="course_selection.course.id" property="courseSelection.course.id" javaType="String"/>
        <result column="course_selection.course.name" property="courseSelection.course.name" javaType="String"/>
        <result column="course_selection.course.teacher.id" property="courseSelection.course.teacher.id" javaType="String"/>
        <result column="course_selection.course.company.id" property="courseSelection.course.company.id" javaType="String"/>
        <result column="course_selection.course.professions" property="courseSelection.course.professions" javaType="String"/>
        <result column="course_selection.course.memo" property="courseSelection.course.memo" javaType="String"/>
        <result column="course_selection.course.start_time" property="courseSelection.course.startTime" javaType="Date"/>
        <result column="course_selection.course.end_time" property="courseSelection.course.endTime" javaType="Date"/>
        <result column="course_selection.course.addition" property="courseSelection.course.addition" javaType="String"/>
        <!--<result column="course_selection.course.state" property="courseSelection.course.state" javaType="String"/>-->
        <result column="student.id" property="student.id" javaType="String"/>
        <result column="student.student_num" property="student.studentNum" javaType="String"/>
        <result column="student.name" property="student.name" javaType="String"/>
        <result column="student.sex" property="student.sex" javaType="String"/>
        <result column="student.profession" property="student.profession" javaType="String"/>
        <result column="student.depart" property="student.depart" javaType="String"/>
        <result column="student.email" property="student.email" javaType="String"/>
    </resultMap>

    <sql id="base_sql">
        score.id 'score_id',
        score.student_id 'student.id',
        score.teacher_score 'teacher_score',
        score.company_score 'company_score',
        course_selection.id 'course_selection.id',
        course.id 'course_selection.course.id',
        course.name 'course_selection.course.name',
        course.teacher_id 'course_selection.course.teacher.id',
        course.company_id 'course_selection.course.company.id',
        course.professions 'course_selection.course.professions',
        course.memo 'course_selection.course.memo',
        course.start_time 'course_selection.course.start_time',
        course.end_time 'course_selection.course.end_time',
        course.addition 'course_selection.course.addition',
        course.update_time 'course_selection.course.update_time',
#         course.state 'course_selection.course.state',
        student.id 'student.id',
        student.student_num 'student.student_num',
        student.name 'student.name',
        student.sex 'student.sex',
        student.profession 'student.profession',
        student.depart 'student.depart',
        student.email 'student.email'
    </sql>

    <select id="selectScoreByStudentId" resultMap="score_map">
        SELECT
        <include refid="base_sql"/>
        FROM score
        LEFT JOIN course_selection
        ON score.course_selection_id = course_selection.id
        LEFT JOIN course
        ON course_selection.course_id = course.id
        LEFT JOIN student
        ON score.student_id = student.id
        WHERE score.student_id = #{studentId} LIMIT #{offset},#{limit}
    </select>

    <select id="selectScoreByCourseId" resultMap="score_map">
        SELECT
        <include refid="base_sql"/>
        FROM score
        LEFT JOIN course_selection
        ON score.course_selection_id = course_selection.id
        LEFT JOIN course
        ON course_selection.course_id = course.id
        LEFT JOIN student
        ON score.student_id = student.id
        WHERE course.id = #{courseId} LIMIT #{offset},#{limit}
    </select>

    <select id="selectRecordCount" resultType="Integer" parameterType="Map">
        SELECT count(score.id) FROM score
        LEFT JOIN course_selection
        ON score.course_selection_id = course_selection.id
        WHERE 1 = 1
        <if test="courseId != null and !&quot;&quot;.equals(courseId)">
            AND course_selection.course_id = #{courseId}
        </if>
        <if test="studentId != null and !&quot;&quot;.equals(studentId)">
            AND score.student_id = #{studentId}
        </if>
    </select>

    <insert id="insertNewScore">
        INSERT INTO score
        (id, student_id,  course_selection_id, teacher_score, company_score)
        VALUE
        (NULL, #{student.id}, #{courseSelection.id}, 0, 0)
    </insert>

    <update id="updateTeacherScore" parameterType="Score">
        UPDATE score
        LEFT JOIN course_selection
        ON score.course_selection_id = course_selection.id
        SET
        teacher_score = #{teacherScore}
        WHERE score.student_id = #{student.id}
        AND course_selection.course_id = #{courseSelection.course.id}
    </update>

    <update id="updateCompanyScore" parameterType="Score">
        UPDATE score
        LEFT JOIN course_selection
        ON score.course_selection_id = course_selection.id
        SET
        company_score = #{companyScore}
        WHERE score.student_id = #{student.id}
        AND course_selection_id = #{courseSelection.course.id}
    </update>

    <delete id="deleteScoreByCourseSelectionId">
        DELETE FROM score WHERE course_selection_id = #{courseSelectionId}
    </delete>
</mapper>