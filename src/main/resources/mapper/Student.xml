<?xml version = "1.0" encoding = "UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD com.example.Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace = "top.oahnus.mapper.StudentMapper">

    <resultMap id="student_map" type="Student">
        <result column="id" property="id" javaType="String"/>
        <result column="student_num" property="studentNum" javaType="String"/>
        <result column="name" property="name" javaType="String"/>
        <result column="sex" property="sex" javaType="String"/>
        <result column="profession" property="profession" javaType="String"/>
        <result column="depart" property="depart" javaType="String"/>
        <result column="email" property="email" javaType="String"/>
    </resultMap>

    <sql id="base_columns">
        id, student_num, name, sex, profession, depart, email
    </sql>
    
    <!--Query-->
    <select id="selectStudentByProfession" resultMap="student_map">
        SELECT
        <include refid="base_columns"/>
        FROM student WHERE profession = #{profession} LIMIT #{offset},#{limit}
    </select>

    <select id="selectStudentByStudentNum" resultMap="student_map">
        SELECT
        <include refid="base_columns"/>
        FROM student WHERE student_num = #{studentNum}
    </select>

    <select id="selectStudentByDepart" resultMap="student_map">
        SELECT
        <include refid="base_columns"/>
        FROM student WHERE depart = #{depart} LIMIT #{offset},#{limit}
    </select>

    <select id="selectCountStudentByDepart" parameterType="String" resultType="Integer">
        SELECT count(id) FROM student WHERE depart = #{depart}
    </select>

    <select id="selectCountStudentByProfession" resultType="Integer" parameterType="String">
        SELECT count(id) FROM student WHERE profession = #{profession}
    </select>

    <!--insert-->
    <insert id="insertStudents" parameterType="List">
        INSERT IGNORE INTO student
        (student_num, name, sex, profession, depart, email)
        VALUES
        <foreach collection="list" separator="," item="item" index="index">
            (#{item.studentNum}, #{item.name}, #{item.sex}, #{item.profession}, #{item.depart}, #{item.email})
        </foreach>
    </insert>

    <insert id="insertOneStudent" parameterType="Student">
        INSERT IGNORE INTO student
        (student_num, name, sex, profession, depart, email)
        VALUE
        (#{studentNum}, #{name}, #{sex}, #{profession}, #{depart}, #{email})
    </insert>

    <!--update-->
    <update id="updateStudent" parameterType="Student">
        UPDATE student SET
        student_num = #{studentNum},
        name = #{name},
        sex = #{sex},
        depart = #{depart},
        profession = #{profession},
        email = #{email}
        WHERE id = #{id}
    </update>

    <!--delete-->
    <delete id="deleteStudentById" parameterType="String">
        DELETE FROM student WHERE id = #{id}
    </delete>
</mapper>