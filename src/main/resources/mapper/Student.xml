<?xml version = "1.0" encoding = "UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD com.example.Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace = "top.oahnus.mapper.StudentMapper">

    <resultMap id="student_map" type="Student">
        <result column="id" property="id" javaType="String"/>
        <result column="student_num" property="studentNum" javaType="String"/>
        <result column="name" property="name" javaType="String"/>
        <result column="sex" property="sex" javaType="String"/>
        <result column="profession" property="profession" javaType="String"/>
        <result column="depart" property="depart" javaType="String"/>
        <result column="email" property="email" javaType="String"/>
    </resultMap>

    <sql id="base_columns">
        student.id, student.student_num, student.name, student.sex, student.profession, student.depart, student.email
    </sql>
    
    <!--Query-->
    <select id="selectStudentByProfession" resultMap="student_map">
        SELECT
        <include refid="base_columns"/>
        FROM student WHERE profession = #{profession} LIMIT #{offset},#{limit}
    </select>

    <select id="selectStudentById" resultMap="student_map">
        SELECT
        <include refid="base_columns"/>
        FROM student WHERE id = #{studentId}
    </select>

    <select id="selectStudentByStudentNum" resultMap="student_map">
        SELECT
        <include refid="base_columns"/>
        FROM student WHERE student_num = #{studentNum}
    </select>

    <select id="selectStudentByDepart" resultMap="student_map">
        SELECT
        <include refid="base_columns"/>
        FROM student WHERE depart = #{depart} LIMIT #{offset},#{limit}
    </select>

    <select id="selectAllStudent" resultMap="student_map">
        SELECT
        <include refid="base_columns"/>
        FROM student LIMIT #{offset},#{limit}
    </select>

    <select id="selectStudentByCourseId" resultMap="student_map">
        SELECT
        <include refid="base_columns"/>
        FROM student
        LEFT JOIN course_selection
        ON course_selection.student_id = student.id
        WHERE course_selection.course_id = #{courseId}
        LIMIT #{offset},#{limit}
    </select>


    <select id="selectRecordCount" resultType="Integer" parameterType="Map">
        SELECT count(student.id) FROM student
        <if test="courseId != null and !&quot;&quot;.equals(courseId)">
            LEFT JOIN course_selection
            ON course_selection.student_id = student.id
        </if>
        WHERE 1 = 1
        <if test="profession != null and !&quot;&quot;.equals(profession)">
            AND student.profession = #{profession}
        </if>
        <if test="depart != null and !&quot;&quot;.equals(depart)">
            AND student.depart = #{depart}
        </if>
        <if test="courseId != null and !&quot;&quot;.equals(courseId)">
            AND course_selection.course_id = #{courseId}
        </if>
    </select>

    <!--insert-->
    <insert id="insertStudents" parameterType="List">
        INSERT IGNORE INTO student
        (student_num, name, sex, profession, depart, email)
        VALUES
        <foreach collection="list" separator="," item="item" index="index">
            (#{item.studentNum}, #{item.name}, #{item.sex}, #{item.profession}, #{item.depart}, #{item.email})
        </foreach>
    </insert>

    <insert id="insertOneStudent" parameterType="Student">
        INSERT IGNORE INTO student
        (student_num, name, sex, profession, depart, email)
        VALUE
        (#{studentNum}, #{name}, #{sex}, #{profession}, #{depart}, #{email})
    </insert>

    <!--update-->
    <update id="updateStudent" parameterType="Student">
        UPDATE student SET
        student_num = #{studentNum},
        name = #{name},
        sex = #{sex},
        depart = #{depart},
        profession = #{profession},
        email = #{email}
        WHERE id = #{id}
    </update>

    <!--delete-->
    <delete id="deleteStudentById" parameterType="String">
        DELETE FROM student WHERE id = #{id}
    </delete>
</mapper>